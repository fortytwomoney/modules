name: Release Artifacts
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+-rc*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5
      - "v[0-9]+.[0-9]+.[0-9]+-beta*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      manual_version:
        description: Specify a version to release
        type: string
        default: "v0.0.0"
        required: false

jobs:
  # Commented out due to lack of access token...
  #  release-artifacts:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Install latest stable
  #        uses: ATiltedTree/setup-rust@v1
  #        with:
  #          rust-version: stable
  #          # components: rustfmt, clippy
  #      - name: Setup Docker Buildx
  #        uses: docker/setup-buildx-action@v2
  #      - name: Generate Cargo.lock
  #        run: |
  #          cargo fetch --verbose
  #      - name: Build Artifacts
  #        run: |
  #          docker run --rm -v "$(pwd)":/code \
  #          --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  #          --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  #          abstractos/workspace-optimizer:0.12.10
  #          tar -zcvf cosmwasm-artifacts.tar.gz artifacts
  #      - name: Create Release
  #        uses: softprops/action-gh-release@v1
  #        with:
  #          files: cosmwasm-artifacts.tar.gz
  #          body_path: CHANGELOG.md

  publish-schemas:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: 4t2
      GH_TOKEN: ${{ secrets.ABSTRACT_SCHEMAS_PR_ACCESS }}
    strategy:
      matrix:
        package: [autocompounder, cw-staking]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install latest stable
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Generate the schemas for ${{ matrix.package }}
        run: |
          cargo schema --package ${{ matrix.package }}

      - name: Get latest tag
        id: get-latest-tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: ${{ github.event.inputs.manual_version }}
      - uses: actions/github-script@v6
        env:
          LATEST_TAG: ${{ steps.get-latest-tag.outputs.tag }}
        id: get-latest-without-v
        with:
          script: |
            const tag = process.env.LATEST_TAG
            const tagWithoutV = tag.replace('v', '')
            return tagWithoutV
          result-encoding: string

      - name: Create pull request
        uses: car-on-sale/action-pull-request-another-repo@v1.3.0
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          LATEST_VERSION: ${{ steps.get-latest-without-v.outputs.result }}
        with:
          source_folder: "schema/"
          destination_repo: "AbstractSDK/schemas"
          destination_folder: ${{ env.NAMESPACE }}/${{ matrix.package }}/${{ env.LATEST_VERSION }}
          destination_base_branch: mainline
          destination_head_branch: ${{ env.NAMESPACE }}/${{ matrix.package }}/${{ env.LATEST_VERSION }}/${{ github.sha }}
          user_email: "32375605+adairrr@users.noreply.github.com"
          user_name: "adairrr"
          pull_request_reviewers: "adairrr"
          commit_msg: "Update ${{ env.NAMESPACE }}:${{ matrix.package }} to ${{ env.LATEST_VERSION }}"
          pr_title: "Update ${{ env.NAMESPACE }}:${{ matrix.package }} to ${{ env.LATEST_VERSION }}"
