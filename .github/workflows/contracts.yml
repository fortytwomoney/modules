name: Clippy & Tests
on:
  pull_request:
    branches:
      - main
      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Cancel previous runs on the same PR.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Clippy Linter
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.ABSTRACT_SSH_PRIVATE_KEY }}
            ${{ secrets.ABSTRACT_BOOT_SSH_PRIVATE_KEY }}

      - name: Install stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - name: Build | Lint
        run: cargo clippy -- -D warnings
  compile:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.ABSTRACT_SSH_PRIVATE_KEY }}
            ${{ secrets.ABSTRACT_BOOT_SSH_PRIVATE_KEY }}

      - name: Install stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"

      - name: Dependencies | Compile
        run: cargo update
      - name: Build | Compile
        run: cargo check
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [compile]
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.ABSTRACT_SSH_PRIVATE_KEY }}
            ${{ secrets.ABSTRACT_BOOT_SSH_PRIVATE_KEY }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Unit Test | Test
        run: cargo test
  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
      - name: Upload to codecov.io
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
